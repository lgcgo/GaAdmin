// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"GaAdmin/internal/model"
	"GaAdmin/internal/model/entity"
	"context"
)

type IAuth interface {
	CreateMenu(ctx context.Context, in *model.AuthMenuCreateInput) (*entity.AuthMenu, error)
	GetMenu(ctx context.Context, menuId uint) (*entity.AuthMenu, error)
	UpdateMenu(ctx context.Context, in *model.AuthMenuUpdateInput) (*entity.AuthMenu, error)
	DeleteMenu(ctx context.Context, menuId uint) error
	GetAllMenu(ctx context.Context) ([]*entity.AuthMenu, error)
	GetMenuTreeData(ctx context.Context) (*model.TreeDataOutput, error)
	GetMenuChildrenIds(ctx context.Context, menuId uint) ([]uint, error)
	CreateRule(ctx context.Context, in *model.AuthRuleCreateInput) (*entity.AuthRule, error)
	GetRule(ctx context.Context, nodeId uint) (*entity.AuthRule, error)
	UpdateRule(ctx context.Context, in *model.AuthRuleUpdateInput) (*entity.AuthRule, error)
	DeleteRule(ctx context.Context, ruleId uint) error
	CheckRulesIds(ctx context.Context, ruleIds []uint) ([]uint, error)
}

var localAuth IAuth

func Auth() IAuth {
	if localAuth == nil {
		panic("implement not found for interface IAuth, forgot register?")
	}
	return localAuth
}

func RegisterAuth(i IAuth) {
	localAuth = i
}
