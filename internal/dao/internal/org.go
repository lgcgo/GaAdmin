// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// OrgDao is the data access object for table org.
type OrgDao struct {
	table   string     // table is the underlying table name of the DAO.
	group   string     // group is the database configuration group name of current DAO.
	columns OrgColumns // columns contains all the column names of Table for convenient usage.
}

// OrgColumns defines and stores column names for table org.
type OrgColumns struct {
	Id              string // ID
	Name            string // 名称
	Phone           string // 电话
	Address         string // 地址
	CertificatesUrl string // 证件
	CertificatesNo  string // 证件号码
	Status          string // 状态
	CreateAt        string // 创建日期
	UpdateAt        string // 更新日期
}

//  orgColumns holds the columns for table org.
var orgColumns = OrgColumns{
	Id:              "id",
	Name:            "name",
	Phone:           "phone",
	Address:         "address",
	CertificatesUrl: "certificates_url",
	CertificatesNo:  "certificates_no",
	Status:          "status",
	CreateAt:        "create_at",
	UpdateAt:        "update_at",
}

// NewOrgDao creates and returns a new DAO object for table data access.
func NewOrgDao() *OrgDao {
	return &OrgDao{
		group:   "default",
		table:   "org",
		columns: orgColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *OrgDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *OrgDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *OrgDao) Columns() OrgColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *OrgDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *OrgDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *OrgDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
